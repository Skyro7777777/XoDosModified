#!/bin/bash
# This Program will install XoDos 

sleep 1

YES | xodos-setup-storage && 
sleep 0.5
YES | xodos-setup-storage
sleep 2
# Log file
LOG_FILE="/storage/emulated/0/Download/XoDosx64error.log"
 
 
# Function to handle errors
handle_error() {
    local command="$1"
    local error="$2"
    local timestamp=$(date +"%Y-%m-%d %T")
    

    # Log the error
    echo "[$timestamp] Error in command: $command" >> "$LOG_FILE"
    echo "[$timestamp] Error message: $error" >> "$LOG_FILE"
    echo >> "$LOG_FILE"  # Add a newline
    
    # Additional error handling logic
    true
}

# Set the error handler function
trap 'handle_error "$BASH_COMMAND" "$?"' ERR
ps 1>> "$LOG_FILE"
lscpu 1>> "$LOG_FILE"
uname -a 1>> "$LOG_FILE"
echo "checking stuff please wait"
echo “正在检查内容，请稍候”
echo "「確認中ですのでお待ちください"
echo "Vérification des choses, veuillez patienter"
echo "सामान की जाँच हो रही है कृपया प्रतीक्षा करें"
echo "رﺎﻈﺘﻧﻹﺍ ءﺎﺟﺮﺑ ءﺎﻴﺷﻷﺍ ﻦﻣ ﻖﻘﺤﺘﻟﺍ يﺭﺎﺟ"
sleep 1
file1=/data/data/com.xodos/files/home/xodos.tar.xz
 
sleep 1

go(){
	# Check if running as 32-bit
	case "$(uname -m)" in
		armv8*|armv7*|i*86)
			cat <<- EOM
			Cannot install XoDos system x64 because: Your device is running in 32-bit
		لا يمكن تثبيت نظام XoDos x64 للأسباب التالية: جهازك يعمل في 32
			EOM
			exit 2
			;; 
		*) ;;
	esac
	# Print some warning message
	cat <<- EOM
	WARNING: You are about to install the XoDos system 64-bit,
سيتم تثبت نظام تشغيل XoDos

	The Installation will begin in 3 seconds, please wait until the app closes  automatically 
	EOM
	sleep 3.5

	echo "couldn't find XoDos archive in download folder"
	case "$(uname -m)" in
		aarch64)
			#mv ~/bootstrap-arm.zip ~/xodos-bootstrap.zip.32
			;;
		x86_64)
			#mv ~/bootstrap-i686.zip ~/xodos-bootstrap.zip32
			;;
		*) 
			#exit 2
	esac

	# Check if file is downloaded properly
	

	# Unpack and remove existing installation
	echo "[*] Unpacking 64bit XoDos system"
	echo "please wait while installing system until the app automatically exit"
	sleep 3
	#chmod 755 $PREFIX/../usr -R ||:
	#rm -rf $PREFIX/../usr2
mkdir $PREFIX/../xod
sleep 1
	tar -xf $file1 -C /data/data/com.xodos/files  --preserve-permissions 
	sleep 1
	mv -f ~/patch.tar.xz /data/data/com.xodos/files/xod 
sleep 2
tar  -xvf /data/data/com.xodos/files/xod/patch.tar.xz -C /data/data/com.xodos/files  --preserve-permissions 2>> "$LOG_FILE"
echo "[*] extracting patches"

sleep 1

	# Process Symlinks
	cp -rf /data/data/com.xodos/files/usr/bin/xodos /data/data/com.xodos/files/XoDos
chmod +x /data/data/com.xodos/files/usr/bin/fix
chmod +x /data/data/com.xodos/files/home/*.deb
	#cd $PREFIX/../usr2
	#while read
	#rm SYMLINKS.txt
	 
	# Create Second Stage Script
	echo "[*] second stage fix"
	FILE="$PREFIX/glibc/opt/scripts/xodos_wine"


# Use sed to replace the line
sed -i.bak '
s/^taskset -c \$PRIMARY_CORES \$GLIBC_BIN\/box64 \$GLIBC_BIN\/wine "\$@"$/DISPLAY=:0 taskset -c $SECONDARY_CORES $GLIBC_BIN\/box64 $GLIBC_BIN\/wine $PREFIX\/glibc\/bin\/ib.exe \&>\/dev\/null \&\
taskset -c $PRIMARY_CORES $GLIBC_BIN\/box64 $GLIBC_BIN\/wine $PREFIX\/glibc\/opt\/apps\/winhandler.exe  "$@"/' "$FILE"

# second:
sleep 1

# Define the file path
FILE="$PREFIX/bin/xodxx"

# Define the old and new lines
OLD_LINE='DISPLAY=:0 LC_ALL=$(cat $PREFIX/glibc/opt/locale.conf) taskset -c $PRIMARY_CORES $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,$RESOLUTION $PREFIX/glibc/opt/apps/tfm.exe >$LOG_PATH 2>&1 &'
NEW_LINE='DISPLAY=:0 LC_ALL=$(cat $PREFIX/glibc/opt/locale.conf) taskset -c $PRIMARY_CORES $GLIBC_BIN/box64 $GLIBC_BIN/wine explorer /desktop=shell,$RESOLUTION $PREFIX/glibc/opt/apps/winhandler.exe $PREFIX/glibc/opt/apps/wfm.exe >$LOG_PATH 2>&1 &'

# Replace the old line while keeping the same position
awk -v old="$OLD_LINE" -v new="$NEW_LINE" '{if ($0 == old) print new; else print $0}' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
    

	echo "fixesHomeEnv="$fixesHomeEnv
    echo "pathEnv="$pathEnv
    echo "winePathEnv="$winePathEnv
    echo $fixesHomeEnv >> ~/.bashrc
    echo $pathEnv >> ~/.bashrc

    tar -xf ~/wine.tar -C $winePathEnv/lib/
    
    cp -rf ~/winhandler.exe $PREFIX/glibc/opt/apps/
    #sed -i '/"dinput"="builtin,native"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/"dinput"="native,builtin"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/"xinput1_4"="builtin,native"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/"xinput1_4"="native,builtin"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/"xinputuap"="builtin,native"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/"xinputuap"="native,builtin"/d' $PREFIX/glibc/opt/prefix/user.reg
    #sed -i '/^$/d' $PREFIX/glibc/opt/prefix/user.reg
    if [ $# -eq 0 ]; then
        echo "default game pad controller set"
        if grep -q '^"dinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"dinput8"="native,builtin"/DINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'DINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"dinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/DINPUTSET/"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
        if grep -q '^"xinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"xinput1_1"="native,builtin"/XINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'XINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"xinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/XINPUTSET/"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
    elif [ "$1" -eq 1 ]; then
        echo "dinput game pad controller set"
        if grep -q '^"dinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"dinput8"="native,builtin"/DINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'DINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"dinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/DINPUTSET/"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
        if grep -q '^"xinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"xinput1_1"="builtin,native"/XINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'XINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"xinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/XINPUTSET/"xinput1_1"="native,builtin"\n"xinput1_2"="native,builtin"\n"xinput1_3"="native,builtin"\n"xinput1_4"="native,builtin"\n"xinput9_1_0"="native,builtin"\n"xinputuap"="native,builtin"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"xinput1_1"="native,builtin"\n"xinput1_2"="native,builtin"\n"xinput1_3"="native,builtin"\n"xinput1_4"="native,builtin"\n"xinput9_1_0"="native,builtin"\n"xinputuap"="native,builtin"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi

    elif [ "$1" -eq 2 ]; then
        echo "xinput game pad controller set"
        if grep -q '^"dinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"dinput8"="builtin,native"/DINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'DINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"dinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/DINPUTSET/"dinput"="native,builtin"\n"dinput8"="native,builtin"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"dinput"="native,builtin"\n"dinput8"="native,builtin"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
        if grep -q '^"xinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"xinput1_1"="native,builtin"/XINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'XINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"xinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/XINPUTSET/"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
    elif [ "$1" -eq 3 ]; then
        echo "both dinput, and xinput game pad controller set"
        if grep -q '^"dinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"dinput8"="native,builtin"/DINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'DINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"dinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/DINPUTSET/"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
        if grep -q '^"xinput' $PREFIX/glibc/opt/prefix/user.reg ;then
            sed -i 's/"xinput1_1"="native,builtin"/XINPUTSET/g' $PREFIX/glibc/opt/prefix/user.reg
            if grep -q 'XINPUTSET' $PREFIX/glibc/opt/prefix/user.reg ;then
                sed -i '/^"xinput/d' $PREFIX/glibc/opt/prefix/user.reg
                sed -i 's/XINPUTSET/"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
            fi
        else
            sed -i 's/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]/\[HKEY_CURRENT_USER\\Software\\Wine\\DllOverrides\]\n"xinput1_1"="builtin,native"\n"xinput1_2"="builtin,native"\n"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"\n"xinput9_1_0"="builtin,native"\n"xinputuap"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
        fi
    else
        echo "unsupported param"
    fi
#    sed -i 's/"dinput8"="native,builtin"/"dinput"="builtin,native"\n"dinput8"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
#    sed -i 's/"xinput1_1"="native,builtin"/"xinput1_1"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
#    sed -i 's/"xinput1_2"="native,builtin"/"xinput1_2"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg
#    sed -i 's/"xinput1_3"="native,builtin"/"xinput1_3"="builtin,native"\n"xinput1_4"="builtin,native"/g' $PREFIX/glibc/opt/prefix/user.reg

if [ -f ~/.bashrc ];then
    echo ".bashrc already exist"
else
    touch ~/.bashrc
fi
	echo " almost done"
	sleep 2
	pkg remove xodos-display-nightly -y 2>> "$LOG_FILE"
pkg remove xodos-x11-nightly -y 2>> "$LOG_FILE"
dpkg -i /data/data/com.xodos/files/home/xodos-x11-nightly-1.03.10-0-all.deb 2>> "$LOG_FILE"
sleep 1
cp /data/data/com.xodos/files/usr/bin/xodos /data/data/com.xodos/files/xodos-normal
cp /data/data/com.xodos/files/usr/bin/xodxx /data/data/com.xodos/files/xodxx-gamemode
cp /data/data/com.xodos/files/usr/bin/xodosset /data/data/com.xodos/files/xodosset-settings
cp  /data/data/com.xodos/files/usr/bin/xodx /data/data/com.xodos/files/xodx-bettergpu
cp /data/data/com.xodos/files/usr/bin/xodxd /data/data/com.xodos/files/xodxd-proot
cp /data/data/com.xodos/files/usr/bin/xodset /data/data/com.xodos/files/xodset-settings
cp /data/data/com.xodos/files/usr/bin/xodos-mali /data/data/com.xodos/files/xodos-maligpu
cp  /data/data/com.xodos/files/usr/bin/kali /data/data/com.xodos/files/kali-kaliroot
cp  /data/data/com.xodos/files/usr/bin/kaliu /data/data/com.xodos/files/kaliu-kaliuser
cp  /data/data/com.xodos/files/home/switch /data/data/com.xodos/files/switch-container
cp  /data/data/com.xodos/files/home/switch /data/data/com.xodos/files/usr/bin/switch
sleep 1
chmod +x /data/data/com.xodos/files/usr/bin/xodos
chmod +x /data/data/com.xodos/files/usr/bin/xodos-mali
chmod +x /data/data/com.xodos/files/usr/bin/xodxx
chmod +x /data/data/com.xodos/files/usr/bin/xodosset
chmod +x /data/data/com.xodos/files/usr/bin/xodx
chmod +x /data/data/com.xodos/files/usr/bin/xodx3
chmod +x  /data/data/com.xodos/files/usr/bin/xodx1
chmod +x /data/data/com.xodos/files/usr/bin/xodxd
chmod +x  /data/data/com.xodos/files/usr/etc/bash.bashrc
chmod +x  /data/data/com.xodos/files/home/x11
chmod +x /data/data/com.xodos/files/xodos-normal
chmod +x /data/data/com.xodos/files/*
chmod +x /data/data/com.xodos/files/xodosset-settings
chmod +x /data/data/com.xodos/files/xodx-bettergpu
chmod +x /data/data/com.xodos/files/xodxd-proot
chmod +x  /data/data/com.xodos/files/bash.bashrc
chmod +x /data/data/com.xodos/files/xodset-settings
chmod +x /data/data/com.xodos/files/xodos-maligpu
chmod +x /data/data/com.xodos/files/usr/bin/kali
chmod +x /data/data/com.xodos/files/usr/bin/kaliu
chmod +x /data/data/com.xodos/files/usr/bin/fix
chmod +x /data/data/com.xodos/files/switch
sleep 1

echo "xinput installing"
 rm -f /data/data/com.xodos/files/home/xodos.tar.xz 


	# Kill Current Process and Do Second Stage Setup
	#exec /system/bin/env -i ./secondstage-setup.sh
	


# END OF MESSAGE EOM 

    echo "XoDosHomeEnv="$XoDosHomeEnv
    winePathEnv=/data/data/com.xodos/files/usr/glibc/xod9.9
    echo "pathEnv="$pathEnv
    echo "winePathEnv="$winePathEnv
    
    echo $XoDosHomeEnv >> ~/.bashrc
    echo $pathEnv >> ~/.bashrc
echo $winePathEnv/lib
sleep 1
    tar -xvf ~/wine.tar -C $winePathEnv/lib/
  # Define the file path

if [ -d "${PREFIX}/glibc" ];then
	echo "XoDos installed"
	XoDosHomeEnv="export XoDos_HOME=\$PREFIX/glibc"
	pathEnv="export PATH=\$PATH:\$XoDos_HOME/opt/scripts"
	prefixPath=$(echo $PREFIX)
	winePath=$(cat $PREFIX/glibc/opt/conf/wine_path.conf|grep "WINE_PATH="|cut -d= -f2|sed 's/$PREFIX//g')
	winePathEnv=$prefixPath$winePath
	if [  $XoDos_HOME ];then
		echo "XoDos env has been set, now update"
		
		resetXoDos
	else
		echo "XoDos env not set, now set"
		resetXoDos
	fi
else
	echo "XoDos not installed"
fi
sleep 2
cd ~
bash fix 1>> "$LOG_FILE"
sleep 2
exit
	kill -KILL $PPID
	EOM
	#chmod 755 $PREFIX/../secondstage-setup.sh
	cd $PREFIX/..
}
go 1>> "$LOG_FILE"
